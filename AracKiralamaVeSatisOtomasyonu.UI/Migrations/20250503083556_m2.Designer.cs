// <auto-generated />
using System;
using AracKiralamaVeSatisOtomasyonu.UI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AracKiralamaVeSatisOtomasyonu.UI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250503083556_m2")]
    partial class m2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Arac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("Kilometre")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MevcutDurum")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Renk")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SanzimanTipi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("YakitTuru")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Yil")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Araclar");
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KategoriAdi = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            KategoriAdi = "SUV"
                        },
                        new
                        {
                            Id = 3,
                            KategoriAdi = "Hatchback"
                        },
                        new
                        {
                            Id = 4,
                            KategoriAdi = "Minivan"
                        });
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Kiralama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AracId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("date");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("date");

                    b.Property<decimal>("GunlukUcret")
                        .HasColumnType("money");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.HasIndex("MusteriId");

                    b.ToTable("Kiralamalar");
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Satis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AracId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("OdemeTipi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("SatisFiyati")
                        .HasColumnType("money");

                    b.Property<DateTime>("SatisTarihi")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.HasIndex("MusteriId");

                    b.ToTable("Satislar");
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Arac", b =>
                {
                    b.HasOne("AracKiralamaVeSatisOtomasyonu.UI.Models.Kategori", "Kategori")
                        .WithMany("Araclar")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Kiralama", b =>
                {
                    b.HasOne("AracKiralamaVeSatisOtomasyonu.UI.Models.Arac", "Arac")
                        .WithMany("Kiralamalar")
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AracKiralamaVeSatisOtomasyonu.UI.Models.Musteri", "Musteri")
                        .WithMany("Kiralamalar")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arac");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Satis", b =>
                {
                    b.HasOne("AracKiralamaVeSatisOtomasyonu.UI.Models.Arac", "Arac")
                        .WithMany("Satislar")
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AracKiralamaVeSatisOtomasyonu.UI.Models.Musteri", "Musteri")
                        .WithMany("Satislar")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arac");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Arac", b =>
                {
                    b.Navigation("Kiralamalar");

                    b.Navigation("Satislar");
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Kategori", b =>
                {
                    b.Navigation("Araclar");
                });

            modelBuilder.Entity("AracKiralamaVeSatisOtomasyonu.UI.Models.Musteri", b =>
                {
                    b.Navigation("Kiralamalar");

                    b.Navigation("Satislar");
                });
#pragma warning restore 612, 618
        }
    }
}
